#BlueJ class context
comment0.target=GestorFaltas
comment0.text=\r\n\ Un\ objeto\ de\ esta\ clase\ permite\ registrar\ estudiantes\ de\ un\r\n\ curso\ (leyendo\ la\ informaci\u00F3n\ de\ un\ fichero\ de\ texto)\ y\ \r\n\ emitir\ listados\ con\ las\ faltas\ de\ los\ estudiantes,\ justificar\ faltas,\ \r\n\ anular\ matr\u00EDcula\ dependiendo\ del\ n\u00BA\ de\ faltas,\ .....\r\n\r\n
comment1.params=n
comment1.target=GestorFaltas(int)
comment2.params=
comment2.target=boolean\ cursoCompleto()
comment2.text=\r\n\ Devuelve\ true\ si\ el\ array\ de\ estudiantes\ est\u00E1\ completo,\r\n\ false\ en\ otro\ caso\r\n
comment3.params=nuevo
comment3.target=void\ addEstudiante(Estudiante)
comment3.text=\r\n\ \ \ \ A\u00F1ade\ un\ nuevo\ estudiante\ solo\ si\ el\ curso\ no\ est\u00E1\ completo\ y\ no\ existe\ ya\ otro\r\n\ \ \ \ estudiante\ igual\ (con\ los\ mismos\ apellidos).\ \r\n\ \ \ \ Si\ no\ se\ puede\ a\u00F1adir\ se\ muestra\ los\ mensajes\ adecuados\ \r\n\ \ \ \ (diferentes\ en\ cada\ caso)\r\n\ \ \ \ \r\n\ \ \ \ El\ estudiante\ se\ a\u00F1ade\ de\ tal\ forma\ que\ queda\ insertado\ en\ orden\ alfab\u00E9tico\ de\ apellidos\r\n\ \ \ \ (de\ menor\ a\ mayor)\r\n\ \ \ \ \!\!OJO\!\!\ No\ hay\ que\ ordenar\ ni\ utilizar\ ning\u00FAn\ algoritmo\ de\ ordenaci\u00F3n\r\n\ \ \ \ Hay\ que\ insertar\ en\ orden\ \r\n\ \ \ \ \r\n
comment4.params=apellidos
comment4.target=int\ buscarEstudiante(java.lang.String)
comment4.text=\r\n\ buscar\ un\ estudiante\ por\ sus\ apellidos\r\n\ Si\ est\u00E1\ se\ devuelve\ la\ posici\u00F3n,\ si\ no\ est\u00E1\ se\ devuelve\ -1\r\n\ Es\ indiferente\ may\u00FAsculas\ /\ min\u00FAsculas\r\n\ Puesto\ que\ el\ curso\ est\u00E1\ ordenado\ por\ apellido\ haremos\ la\ b\u00FAsqueda\ m\u00E1s\r\n\ eficiente\r\n\ \ \r\n
comment5.params=
comment5.target=java.lang.String\ toString()
comment5.text=\r\n\ Representaci\u00F3n\ textual\ del\ curso\r\n\ Utiliza\ StringBuilder\ como\ clase\ de\ apoyo.\r\n\ \ \r\n
comment6.params=apellidos\ faltas
comment6.target=void\ justificarFaltas(java.lang.String,\ int)
comment6.text=\r\n\ \ Se\ justifican\ las\ faltas\ del\ estudiante\ cuyos\ apellidos\ se\ proporcionan\r\n\ \ El\ m\u00E9todo\ muestra\ un\ mensaje\ indicando\ a\ qui\u00E9n\ se\ ha\ justificado\ las\ faltas\r\n\ \ y\ cu\u00E1ntas\r\n\ \ \r\n\ \ Se\ asume\ todo\ correcto\ (el\ estudiante\ existe\ y\ el\ n\u00BA\ de\ faltas\ a\r\n\ \ justificar\ tambi\u00E9n\r\n
comment7.params=
comment7.target=void\ ordenar()
comment7.text=\r\n\ ordenar\ los\ estudiantes\ de\ mayor\ a\ menor\ n\u00BA\ de\ faltas\ injustificadas\r\n\ si\ coinciden\ se\ tiene\ en\ cuenta\ las\ justificadas\r\n\ M\u00E9todo\ de\ selecci\u00F3n\ directa\r\n
comment8.params=
comment8.target=void\ anularMatricula()
comment8.text=\r\n\ anular\ la\ matr\u00EDcula\ (dar\ de\ baja)\ a\ \r\n\ aquellos\ estudiantes\ con\ 30\ o\ m\u00E1s\ faltas\ injustificadas\r\n
comment9.params=
comment9.target=void\ leerDeFichero()
comment9.text=\r\n\ Lee\ de\ un\ fichero\ de\ texto\ los\ datos\ de\ los\ estudiantes\r\n\ \ \ con\ ayuda\ de\ un\ objeto\ de\ la\ \ clase\ Scanner\r\n\ \ \ y\ los\ guarda\ en\ el\ array.\ \r\n
numComments=10
